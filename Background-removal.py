# -*- coding: utf-8 -*-
"""Text to image.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Keps_Vjnt1V9fNtFerkG7K1GGT9Q2WVs

Created 5 random images
"""

from IPython.display import Image
import requests
import os

# Generate a random image from Lorem Picsum
image_url = 'https://picsum.photos/500/300'

# Display the image
displayed_image = Image(url=image_url)

# Download the image
image_content = requests.get(image_url).content

# Save the image with the specified file name
for i in range(1, 6):
  image_content = requests.get(image_url).content
  file_name = 'random_image'+str(i)+'.jpg'
  with open(file_name, 'wb') as f:
      f.write(image_content)

"""Converting jpg image to png image"""

def remove_background(image_path, background_color, output_path):
    # Open the image
    img = Image.open(image_path)

    # Convert the image to RGBA mode
    img = img.convert("RGBA")

    # Get data of the image
    data = img.getdata()

    # Create a new transparent image
    new_data = []
    for item in data:
        # Remove background color by setting alpha to 0
        if item[:3] == background_color:
            new_data.append((255, 255, 255, 0))  # Transparent pixel
        else:
            new_data.append(item)

    # Update image data with the new transparent data
    img.putdata(new_data)

    # Save the image with removed background
    img.save(output_path, "PNG")

    print(f"Image with background color {background_color} removed and saved as {output_path}")

# Background color to be removed (in RGB format)
background_color = (255, 255, 255)  # Example: White background

from PIL import Image

for i in range(1, 6):
  # Remove background color from the image
  image_path = 'product'+str(i)+'.jpg'
  output_image_path = "image_without_background"+str(i)+".png"
  remove_background(image_path, background_color, output_image_path)

"""Now, adding foreground image to background image."""

def overlay_images(background_path, foreground_path, output_path):
    # Open background and foreground images
    background = Image.open(background_path)
    foreground = Image.open(foreground_path)

    # Resize foreground image to fit the background
    foreground = foreground.resize(background.size, Image.ANTIALIAS)

    # Create a composite image
    overlay = Image.alpha_composite(background.convert('RGBA'), foreground.convert('RGBA'))

    # Save the composite image
    overlay.save(output_path, 'PNG')

    print(f"Images overlaid and saved as {output_path}")

for i in range(1, 6):
  foreground_image_path = 'image_without_background'+str(i)+'.png'
  path = '/content/output/'+str(i)
  os.makedirs(path, exist_ok=True)
  for j in range(1, 6):
    background_image_path = 'random_image'+str(j)+'.jpg'
    output_path = path + '/' + str(j) + '.png'
    # Overlay images
    overlay_images(background_image_path, foreground_image_path, output_path)